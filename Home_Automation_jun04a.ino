#include "arduino_secrets.h"

#include <DHT.h> 

/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/b6ae9d0c-2ae0-45aa-815c-c3753daa73d5 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudSwitch light1;
  CloudSwitch light2;
  CloudSwitch light3;
  CloudSwitch light4;
  CloudTemperatureSensor temperature;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

#define Switch1  D1
#define Switch2 D2
#define Switch3  D3
#define Switch4 D4

#define DHTPIN D5
#define DHTTYPE DHT11
DHT dht(DHTPIN,DHTTYPE);

unsigned long previousMillis = 0;
const long interval = 5000;

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 
  pinMode(Switch1,OUTPUT);
  pinMode(Switch2,OUTPUT);
  pinMode(Switch3,OUTPUT);
  pinMode(Switch4,OUTPUT);
  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youÃ¢ÂÂll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
    unsigned long currentMillis = millis();

  if(currentMillis - previousMillis >= interval)
  {
    previousMillis = currentMillis;
    sendDHT11Data();
  }
  
  
}


/*
  Since Light1 is READ_WRITE variable, onLight1Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLight1Change()  {
  // Add your code here to act upon Light1 change

    if(light1)
  {
    digitalWrite(Switch1,HIGH);
    Serial.println("ON");
  }
  else
  {
    digitalWrite(Switch1,LOW);
    Serial.println("OFF");
  }
}

/*
  Since Light2 is READ_WRITE variable, onLight2Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLight2Change()  {
  // Add your code here to act upon Light2 change
    if(light2)
  {
    digitalWrite(Switch2,HIGH);
    Serial.println("ON");
  }
  else
  {
    digitalWrite(Switch2,LOW);
    Serial.println("OFF");
  }
}

/*
  Since Light3 is READ_WRITE variable, onLight3Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLight3Change()  {
  // Add your code here to act upon Light3 change

    if(light3)
  {
    digitalWrite(Switch3,HIGH);
    Serial.println("ON");
  }
  else
  {
    digitalWrite(Switch3,LOW);
    Serial.println("OFF");
  }
}

/*
  Since Light4 is READ_WRITE variable, onLight4Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLight4Change()  {
  // Add your code here to act upon Light4 change

    if(light4)
  {
    digitalWrite(Switch4,HIGH);
    Serial.println("ON");
  }
  else
  {
    digitalWrite(Switch4,LOW);
    Serial.println("OFF");
  }
}

void sendDHT11Data()
{
  temperature = dht.readTemperature();

  if(isnan(temperature))
  {
    Serial.println("Failed to read from DHT Sensor");
  }
  Serial.print("Temperature: ");
  Serial.print(temperature);
  Serial.print(" Â°C ");
  
}

/*
  Since Temperature is READ_WRITE variable, onTemperatureChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onTemperatureChange()  {
  // Add your code here to act upon Temperature change
}
